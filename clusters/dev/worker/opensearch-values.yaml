
opensearch-cluster:
  cluster:

    dashboards:
      enable: true
      additionalConfig: 
        opensearch_security.auth.type: |
          ["basicauth", "openid"]
        opensearch_security.auth.multiple_auth_enabled: "true"
        opensearch_security.openid.connect_url: "https://iris-iam.stfc.ac.uk/.well-known/openid-configuration"
        opensearch_security.openid.scope: "openid profile email preferred_username groups"
        opensearch_security.openid.base_redirect_url: https://opensearch.example.com
    
    nodePools:
      - component: nodes
        diskSize: "50Gi"
        replicas: 5
        persistence:
          pvc:
            accessModes:
              - ReadWriteOnce
            storageClass: longhorn-opensearch
        nodeSelector: {}
        roles:
          - "cluster_manager"
          - "data"
        pdb:
          enable: true
          maxUnavailable: 1  

    ingress: 
      dashboards:
        hosts:
          - host: opensearch-dashboards.dev-worker.nubes.stfc.ac.uk
            paths:
              - path: /
                pathType: ImplementationSpecific
        tls:
          - secretName: opensearch-tls
            hosts:
              - opensearch-dashboards.dev-worker.nubes.stfc.ac.uk
      
      opensearch:
        hosts:
          - host: opensearch.dev-worker.nubes.stfc.ac.uk
            paths:
              - path: /
                pathType: ImplementationSpecific
        tls:
          - secretName: opensearch-tls
            hosts:
              - opensearch.dev-worker.nubes.stfc.ac.uk

  # This is a Opensearch cluster that collects logs from all clusters 
  # and stores in different tenants
  users:
    - name: "writer-dev"
      secretName: opensearch-internal-user-credentials
      secretKey: "writer-dev"

    - name: "writer-prod"
      secretName: opensearch-internal-user-credentials
      secretKey: "writer-prod"

  tenants:
    - name: "azimuth"
      description: "logs from production azimuth and azimuth created clusters"
    - name: "azimuth-dev"
      description: "logs from staging azimuth and staging azimuth created clusters"
    - name: "cloud-dev" 
      description: "logs from dev k8s clusters"
    - name: "cloud"
      description: "logs for prod/staging k8s clusters"

  roles:  
    - name: "read-only-dev-role"
      clusterPermissions: 
        - "cluster_composite_ops_ro"
      indexPermissions:
        - indexPatterns:
          - "kube_logs_*"
          - "trivy_*"
          allowedActions:
            - "indices_admin/mappings/get"
            - "indices_admin/mappings/fields/get"
            - "indices_admin/mappings/fields/get*"
            - "indices:data/read/search*"
            - "indices:data/read/msearch*"
            - "indices:data/read/field_caps*"
            - "indices:data/read/scroll*"
            - "indices:data/read/explain*"
            - "indices:admin/aliases/get"
            - "indices:admin/aliases/exists"
            - "indices:admin/get"
            - "indices:admin/exists"
            - "indices:admin/types/exists"
            - "indices:admin/mappings/get"
            - "indices:admin/mappings/fields/get"
            - "indices:admin/validate/query"
            - "indices:admin/refresh"
            - "indices:admin/analyze"
            - "indices:admin/cache/clear"
            - "indices:admin/settings/get"
            - "indices:admin/stats"
            - "indices:monitor/stats"
            - "indices:monitor/segments"
            - "indices:monitor/settings/get"
            - "indices:monitor/recovery"
      tenantPermissions:
        - tenantPatterns:
            - "azimuth-dev"
            - "cloud-dev"
          allowedActions:
            # so to allow creating dashboards
            - "kibana_all_write"

    # setup separate writer for azimuth user clusters to write logs to
    # should only be able to write to azimuth tenant
    - name: "write-only-azimuth-role"
      clusterPermissions:
        - "indices:data/write/bulk"
      indexPermissions:
        - indexPatterns:
          - "kube_logs_azimuth_*"
          - "trivy_azimuth_*"
          allowedActions:
            - "indices:data/write/index"
            - "indices:data/write/update"
            - "indices:admin/create"
            - "indices:data/write/bulk*"
            - "indices:admin/mapping/put"
      tenantPermissions:
        - tenantPatterns:
            - "azimuth"
          allowedActions:
            - "kibana_all_write"

    - name: "write-only-dev-role"
      clusterPermissions:
        - "indices:data/write/bulk"
      indexPermissions:
        - indexPatterns:
          - "kube_logs_*"
          - "trivy_*"
          allowedActions:
            - "indices:data/write/bulk"
            - "indices:data/write/index"
            - "indices:data/write/update"
            - "indices:admin/create"
      tenantPermissions:
        - tenantPatterns:
            - "azimuth-dev"
            - "cloud-dev"
          allowedActions:
            - "kibana_all_write"

    - name: "write-only-prod-role"
      clusterPermissions:
        - "indices:data/write/bulk"
      indexPermissions:
        - indexPatterns:
          - "kube_logs_*"
          - "trivy_*"
          allowedActions:
            - "indices:data/write/bulk"
            - "indices:data/write/index"
            - "indices:data/write/update"
            - "indices:admin/create"

      
  usersRoleBinding:
    - name: "write-only-dev-role-binding" 
      users: 
        - "writer-dev"
      roles:
        - "write-only-dev-role"
      
    - name: "write-only-prod-role-binding"
      users: 
        - "writer-prod"
      roles:
        - "write-only-prod-role"
    
    - name: "write-only-azimuth-role-binding"
      users: 
        - "writer-azimuth"
      roles:
        - "write-only-azimuth-role"

    # user role mappings
    # dev role-mapping - accessing dev cluster logs available to everyone in team
    - name: "read-only-dev-role-binding"
      roles: 
        - "read-only-dev-role"
      backend_roles:
        - "stfc-cloud/team"

    - name: "admin-role-binding"
      roles:
        - "admin"
      backend_roles:
        - stfc-cloud/admins

  # simple policy to delete index older than 90 days
  ismPolicies:
    - name: retention-90d
      defaultState: hot
      description: log retention 90 days
      states:
        - name: hot
          actions:
            - replicaCount: 
                numberOfReplicas: 1
          transitions: 
            - stateName: delete
              conditions:
                minIndexAge: "90d"
        - name: delete
          actions: 
            - delete: {}
          transitions: []
