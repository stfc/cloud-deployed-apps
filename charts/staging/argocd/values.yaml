argo-cd:
  global:
    domain:

  configs:
    cm:
      helm.valuesFileSchemes: >-
        secrets+age-import, secrets+age-import-kubernetes,
        secrets,secrets+literal,
        https

  server:
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      tls: true

    certificate:
      # -- Deploy a Certificate resource (requires cert-manager)
      enabled: true
      issuer:
        kind: "ClusterIssuer"
        # Certificate issuer name. Eg. `self-signed`, `letsencrypt-staging`, or `letsencrypt-prod``
        # This is overriden per-cluster in the cluster's argo-values.yaml
        name: "self-signed"

  # Inject Helm-Secrets into the ArgoCD server
  repoServer:
    env:
      - name: HELM_PLUGINS
        value: /custom-tools/helm-plugins/
      - name: HELM_SECRETS_CURL_PATH
        value: /custom-tools/curl
      - name: HELM_SECRETS_SOPS_PATH
        value: /custom-tools/sops
      - name: HELM_SECRETS_VALS_PATH
        value: /custom-tools/vals
      - name: HELM_SECRETS_KUBECTL_PATH
        value: /custom-tools/kubectl
      - name: HELM_SECRETS_BACKEND
        value: sops
      # https://github.com/jkroepke/helm-secrets/wiki/Security-in-shared-environments
      - name: HELM_SECRETS_VALUES_ALLOW_SYMLINKS
        value: "false"
      - name: HELM_SECRETS_VALUES_ALLOW_ABSOLUTE_PATH
        value: "true"
      - name: HELM_SECRETS_VALUES_ALLOW_PATH_TRAVERSAL
        value: "true"
      - name: HELM_SECRETS_WRAPPER_ENABLED
        value: "false"
      - name: HELM_SECRETS_DECRYPT_SECRETS_IN_TMP_DIR
        value: "true"
      - name: HELM_SECRETS_DEBUG
        value: "false"
      - name: HELM_SECRETS_HELM_PATH
        value: /usr/local/bin/helm
      - name: SOPS_AGE_KEY_FILE # For age
        value: /helm-secrets-private-keys/key.txt
    volumes:
      - name: custom-tools
        emptyDir: {}
      - name: helm-secrets-private-keys
        secret:
          secretName: helm-secrets-private-keys
    volumeMounts:
      - mountPath: /helm-secrets-private-keys/
        name: helm-secrets-private-keys
      - mountPath: /custom-tools
        name: custom-tools
      - mountPath: /usr/local/sbin/helm
        subPath: helm
        name: custom-tools
    initContainers:
      - name: download-tools
        image: alpine:latest
        imagePullPolicy: IfNotPresent
        command: [sh, -ec]
        env:
          - name: HELM_SECRETS_VERSION
            value: "4.6.9"
          - name: KUBECTL_VERSION
            value: "1.33.4"
          - name: VALS_VERSION
            value: "0.42.1"
          - name: SOPS_VERSION
            value: "3.10.2"
        args:
          - |
            mkdir -p /custom-tools/helm-plugins
            wget -qO- https://github.com/jkroepke/helm-secrets/releases/download/v${HELM_SECRETS_VERSION}/helm-secrets.tar.gz | tar -C /custom-tools/helm-plugins -xzf-;

            wget -qO /custom-tools/curl https://github.com/moparisthebest/static-curl/releases/latest/download/curl-amd64
            wget -qO /custom-tools/sops https://github.com/getsops/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.linux.amd64
            wget -qO /custom-tools/kubectl https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl

            wget -qO- https://github.com/helmfile/vals/releases/download/v${VALS_VERSION}/vals_${VALS_VERSION}_linux_amd64.tar.gz | tar -xzf- -C /custom-tools/ vals;

            cp /custom-tools/helm-plugins/helm-secrets/scripts/wrapper/helm.sh /custom-tools/helm
            RUN printf '#!/usr/bin/env sh\nexec %s secrets "$@"' "${HELM_SECRETS_HELM_PATH}" >"/usr/local/sbin/helm" && chmod +x "/custom-tools/helm"

            chmod +x /custom-tools/*
        volumeMounts:
          - mountPath: /custom-tools
            name: custom-tools
